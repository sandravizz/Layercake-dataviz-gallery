{
  "version": 3,
  "sources": ["../../yootils/src/array/binarySearch.js", "../../yootils/src/array/pickRandom.js", "../../yootils/src/array/shuffle.js", "../../yootils/src/async/queue.js", "../../yootils/src/async/sleep.js", "../../yootils/src/canvas/sprite.js", "../../yootils/src/number/clamp.js", "../../yootils/src/number/random.js", "../../yootils/src/number/seedRandom.js", "../../yootils/src/scale/linear.js", "../../yootils/src/string/commas.js", "../../yootils/src/string/padLeft.js"],
  "sourcesContent": ["/**\n * @template T\n * @typedef {(item: T, needle?: number) => number} Comparator<T=any>\n */\n\n/** @type {Comparator<any>} */\nconst default_sort = (item, needle) => item - needle;\n\n/**\n * @template T\n * @param {T[]} array\n * @param {number} search\n * @param {Comparator<T>} [fn]\n */\nexport default function binarySearch(array, search, fn = default_sort) {\n\tlet low = 0;\n\tlet high = array.length - 1;\n\n\t/** @type {Comparator<T>} */\n\tconst sort =\n\t\tfn.length === 1\n\t\t\t? /** @type {Comparator<T>} */ ((item, needle) => fn(item) - search)\n\t\t\t: fn;\n\n\twhile (low <= high) {\n\t\tconst i = (high + low) >> 1;\n\n\t\tconst d = sort(array[i], search);\n\n\t\tif (d < 0) {\n\t\t\tlow = i + 1;\n\t\t} else if (d > 0) {\n\t\t\thigh = i - 1;\n\t\t} else {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -low - 1;\n}\n", "/** @param {any[]} array */\nexport default function pickRandom(array) {\n\tconst i = ~~(Math.random() * array.length);\n\treturn array[i];\n}\n", "// http://bost.ocks.org/mike/shuffle/\n\n/** @param {any[]} array */\nexport default function shuffle(array) {\n\tlet m = array.length;\n\n\t// While there remain elements to shuffle…\n\twhile (m > 0) {\n\t\t// Pick a remaining element…\n\t\tconst i = Math.floor(Math.random() * m--);\n\n\t\t// And swap it with the current element.\n\t\tconst t = array[m];\n\t\tarray[m] = array[i];\n\t\tarray[i] = t;\n\t}\n\n\treturn array;\n}\n", "/**\n * @typedef {{\n *   fulfil: (value?: any) => void;\n *   reject: (error?: Error) => void;\n *   promise: Promise<any>;\n * }} Deferred\n *\n * @typedef {{\n *   fn: () => Promise<any>;\n *   fulfil: (value: any) => void;\n *   reject: (error: Error) => void;\n * }} Item\n */\n\n/**\n * Create a queue for running promise-returning functions in sequence, with concurrency=`max`\n * @param {number} max\n */\nexport default function queue(max = 4) {\n\t/** @type {Item[]} */\n\tconst items = []; // TODO\n\n\tlet pending = 0;\n\n\tlet closed = false;\n\n\t/** @type {(value: any) => void} */\n\tlet fulfil_closed;\n\n\tfunction dequeue() {\n\t\tif (pending === 0 && items.length === 0) {\n\t\t\tif (fulfil_closed) fulfil_closed();\n\t\t}\n\n\t\tif (pending >= max) return;\n\t\tif (items.length === 0) return;\n\n\t\tpending += 1;\n\n\t\tconst { fn, fulfil, reject } = items.shift();\n\t\tconst promise = fn();\n\n\t\ttry {\n\t\t\tpromise.then(fulfil, reject).then(() => {\n\t\t\t\tpending -= 1;\n\t\t\t\tdequeue();\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t\tpending -= 1;\n\t\t\tdequeue();\n\t\t}\n\n\t\tdequeue();\n\t}\n\n\treturn {\n\t\t/** @param {() => Promise<any>} fn */\n\t\tadd(fn) {\n\t\t\tif (closed) {\n\t\t\t\tthrow new Error(`Cannot add to a closed queue`);\n\t\t\t}\n\n\t\t\treturn new Promise((fulfil, reject) => {\n\t\t\t\titems.push({ fn, fulfil, reject });\n\t\t\t\tdequeue();\n\t\t\t});\n\t\t},\n\n\t\tclose() {\n\t\t\tclosed = true;\n\n\t\t\treturn new Promise((fulfil, reject) => {\n\t\t\t\tif (pending === 0) {\n\t\t\t\t\tfulfil();\n\t\t\t\t} else {\n\t\t\t\t\tfulfil_closed = fulfil;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n", "/**\n * Wait for `ms` milliseconds\n * @param {number} ms\n */\nexport default function sleep(ms) {\n\treturn new Promise((fulfil) => {\n\t\tsetTimeout(fulfil, ms);\n\t});\n}\n", "/**\n * Generate a sprite using the canvas API\n * @param {number} width\n * @param {number} height\n * @param {(ctx: CanvasRenderingContext2D, w: number, h: number) => void} fn\n */\nexport default function createSprite(width, height, fn) {\n\tconst canvas = document.createElement('canvas');\n\tcanvas.width = width;\n\tcanvas.height = height;\n\tconst ctx = canvas.getContext('2d');\n\n\tfn(ctx, canvas.width, canvas.height);\n\n\treturn canvas;\n}\n", "/**\n * Clamp `num` to the range `[min, max]`\n * @param {number} num\n * @param {number} min\n * @param {number} max\n */\nexport default function clamp(num, min, max) {\n\treturn num < min ? min : num > max ? max : num;\n}\n", "/**\n * Generate a random number between `a` and `b`, or between 0 and `a` if `b` is unspecified\n * @param {number} a\n * @param {number} [b]\n */\nexport default function random(a, b) {\n\tif (b === undefined) return Math.random() * a;\n\treturn a + Math.random() * (b - a);\n}\n", "/*\n\nAdapted from http://davidbau.com/encode/seedrandom.js\n\nLICENSE (MIT)\n-------------\n\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nconst width = 256; // width: each RC4 output is 0 <= x < 256\nconst chunks = 6; // chunks: at least six RC4 outputs for each double\nconst digits = 52; // digits: there are 52 significant digits in a double\n\n//\n// The following constants are related to IEEE 754 limits.\n//\nconst startdenom = Math.pow(width, chunks);\nconst significance = Math.pow(2, digits);\nconst overflow = significance * 2;\nconst mask = width - 1;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nclass ARC4 {\n\t/** @param {number[]} key */\n\tconstructor(key) {\n\t\tthis.i = 0;\n\t\tthis.j = 0;\n\n\t\t/** @type {number[]} */\n\t\tthis.S = [];\n\n\t\t// Set up S using the standard key scheduling algorithm.\n\t\tfor (let i = 0; i < width; i += 1) {\n\t\t\tthis.S[i] = i;\n\t\t}\n\n\t\tconst len = key.length;\n\t\tlet t;\n\t\tlet j = 0;\n\n\t\tfor (let i = 0; i < width; i += 1) {\n\t\t\tthis.S[i] = this.S[(j = mask & (j + key[i % len] + (t = this.S[i])))];\n\t\t\tthis.S[j] = t;\n\t\t}\n\n\t\t// For robust unpredictability, the function call below automatically\n\t\t// discards an initial batch of values.  This is called RC4-drop[256].\n\t\t// See http://google.com/search?q=rsa+fluhrer+response&btnI\n\t\tthis.g(width);\n\t}\n\n\t/** @param {number} count */\n\tg(count) {\n\t\tconst s = this.S;\n\t\tlet r = 0;\n\n\t\twhile (count--) {\n\t\t\tconst t = s[(this.i = mask & (this.i + 1))];\n\t\t\tr =\n\t\t\t\tr * width +\n\t\t\t\ts[\n\t\t\t\t\tmask &\n\t\t\t\t\t\t((s[this.i] = s[(this.j = mask & (this.j + t))]) + (s[this.j] = t))\n\t\t\t\t];\n\t\t}\n\n\t\treturn r;\n\t}\n}\n\n/**\n * Create a seeded random number generator that returns a random number between `a` and `b`, or between 0 and `a` if `b` is unspecified\n * @param {string} seed\n */\nexport default function seedRandom(seed) {\n\tif (!seed) seed = '\\0';\n\n\t/** @type {number[]} */\n\tconst key = [];\n\n\t/** @type {number} */\n\tlet smear;\n\n\tfor (let i = 0; i < seed.length; i += 1) {\n\t\tkey[mask & i] = mask & ((smear ^= key[mask & i] * 19) + seed.charCodeAt(i));\n\t}\n\n\t// Use the seed to initialize an ARC4 generator.\n\tconst arc4 = new ARC4(key);\n\n\tfunction prng() {\n\t\tlet n = arc4.g(chunks); // Start with a numerator n < 2 ^ 48\n\t\tlet d = startdenom; //   and denominator d = 2 ^ 48.\n\t\tlet x = 0; //   and no 'extra last byte'.\n\n\t\twhile (n < significance) {\n\t\t\t// Fill up all significant digits by\n\t\t\tn = (n + x) * width; //   shifting numerator and\n\t\t\td *= width; //   denominator and generating a\n\t\t\tx = arc4.g(1); //   new least-significant-byte.\n\t\t}\n\n\t\twhile (n >= overflow) {\n\t\t\t// To avoid rounding up, before adding\n\t\t\tn /= 2; //   last byte, shift everything\n\t\t\td /= 2; //   right using integer math until\n\t\t\tx >>>= 1; //   we have exactly the desired bits.\n\t\t}\n\n\t\treturn (n + x) / d; // Form the number within [0, 1).\n\t}\n\n\t/**\n\t * Generate a random number between `a` and `b`, or between 0 and `a` if `b` is unspecified\n\t * @param {number} a\n\t * @param {number} [b]\n\t */\n\tfunction random(a, b) {\n\t\tif (b === undefined) return prng() * a;\n\t\treturn a + prng() * (b - a);\n\t}\n\n\treturn random;\n}\n", "/**\n * Generates a `scale` function that maps from `domain` to `range`.\n * `scale.inverse()` returns a function that maps from `range` to `domain`\n * @param {[number, number]} domain\n * @param {[number, number]} range\n */\nexport default function linear(domain, range) {\n\tconst d0 = domain[0];\n\tconst r0 = range[0];\n\tconst m = (range[1] - r0) / (domain[1] - d0);\n\n\t/** @param {number} num */\n\tfunction scale(num) {\n\t\treturn r0 + (num - d0) * m;\n\t}\n\n\tscale.inverse = () => linear(range, domain);\n\n\treturn scale;\n}\n", "// https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n\n/**\n * Format a number with comma separators\n * @param {number} num\n */\nexport default function commas(num) {\n\tconst parts = String(num).split('.');\n\tparts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\treturn parts.join('.');\n}\n", "/**\n * Pad a number or string\n * @param {string | number} input\n * @param {number} [length]\n * @param {string} [char]\n */\nexport default function padLeft(input, length = 2, char = '0') {\n\tlet output = String(input);\n\twhile (output.length < length) output = char + output;\n\treturn output;\n}\n"],
  "mappings": "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",
  "names": ["width", "random"]
}
